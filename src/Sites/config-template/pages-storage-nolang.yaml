access-point: sites
module: Sites
models:
  row: Models\Page
  table: Models\Pages
desc: Pages
params:
  visible: false
  maybepublished: false
fields:
  domain:
    type: bigint
    class: App\Modules\Sites\Models\Domain
    component: Colibri.UI.Forms.Hidden
    desc: Domain   
    default: "0"
    params:
      required: true
      readonly: true
    lookup:
      storage:
        name: domains
        title: description
        value: id
  parent:
    type: bigint
    class: App\Modules\Sites\Models\Page
    component: Colibri.UI.Forms.Hidden
    desc: Parent page   
    default: "0"
    params:
      required: false
      readonly: false
    lookup:
      storage:
        name: pages
        title: description
        value: id
  name:
    type: varchar
    length: 255
    class: string
    desc: Section name
    note: Enter the page name, the name will be used in the URL
    params:
      required: true
      readonly: false
      valuegenerator: "(value, rootValue) => !rootValue.name ? rootValue.description.CyrToUrl() : undefined"
  description:
    type: varchar
    length: 512
    class: string
    desc: Page description
    note: Enter the site description
    params:
      required: true
      enabled: true
      canbeempty: true
      readonly: false
      list: false
      multiple: false
      greed: ""
      viewer: ~
      vertical: false
      visual: false
      code: ""
      mask: ""
      fieldgenerator: ""
      generator: ""
      noteClass: ""
      simplearraywidth: ""
      simplearrayheight: ""
      addlink:
        ru: ""
        en: ""
        hy: ""
      removelink: true
      updownlink: true
      initempty: true
      maxadd: ""
      title: ""
      removedesc: true
      allow: ""
      size: ""
      validate: []
    placeholder:
      ru: ""
      en: ""
      hy: ""
    component: Colibri.UI.Forms.Text
    attrs: []
    group: window
  published:
    type: bool
    class: bool
    desc: Published
    component: Colibri.UI.Forms.Checkbox
    params:
      required: true
      readonly: false
    default: false
    selector:
      value: value
      title: title
  additional:
    type: json
    class: ObjectField
    component: Colibri.UI.Forms.Tabs
    desc: Miscellaneous
    default: json_object()
    fields:
      meta:
        type: json
        class: ObjectField
        desc: Meta data
        component: Colibri.UI.Forms.Object
        params:
          vertical: true
        default: json_object()
        fields:
          title:
            type: varchar
            length: 512
            class: string
            component: Colibri.UI.Forms.Text
            desc: Page title
            note: Enter the page title
          description:
            type: varchar
            length: 1024
            class: string
            component: Colibri.UI.Forms.TextArea
            desc: Page description
            note: Enter the meta description of the site
          keywords:
            type: varchar
            length: 1024
            class: string
            component: Colibri.UI.Forms.TextArea
            desc: Keywords
            note: Enter the keywords  
      settings:
        type: json
        class: ObjectField
        component: Colibri.UI.Forms.Object
        desc: Technical data
        params:
          vertical: true
        default: json_object()
        fields:
          component:
            type: varchar
            length: 255
            class: string
            component: Colibri.UI.Forms.Select
            desc: Component
            note: ""
            params:
              required: false
              readonly: false
              searchable: false
            selector:
              value: value
              title: title
            lookup:
              method: '(term, dependsValue) => new Promise((resolve, reject) =>
                { let ret = []; const module
                = dependsValue?.additional?.settings.module; Object.forEach(eval("App.Modules."
                + module), (name, value) => { if(name.indexOf(''Page'') !== -1)
                { ret.push({value: name, title: module + ''.'' + name}); } }); resolve(ret);
                }); '
              depends: domain
          template:
            type: varchar
            length: 255
            class: string
            component: Colibri.UI.Forms.Select
            desc: Template     
            note: ""
            params:
              required: false
              readonly: true
            selector:
              value: value
              title: title
            lookup:
              method: '(term, dependsValue) => new Promise((resolve, reject) =>
                { let ret = []; Manage.Store.AsyncQuery("manage.templates("
                + dependsValue?.additional?.settings.module.toLowerCase() + ")").then((templates)
                => { templates && Array.isArray(templates) && templates.forEach(template => { ret.push({value: template.path,
                title: template.path}); }); resolve(ret); }); }); '
              depends: domain
      parameters:
        type: json
        class: ArrayField
        component: Colibri.UI.Forms.Array
        desc: Additional properties
        default: json_array()
        attrs:
          className: app-field-wrap
        params:
          addlink: Add parameter
        fields:
          name:
            type: varchar
            length: 50
            class: string
            component: Colibri.UI.Forms.Text
            desc: Field name       
            attrs:
              width: 30%
          description:
            type: varchar
            length: 255
            class: string
            component: Colibri.UI.Forms.Text
            desc: Field description      
            attrs:
              width: 68%
          type:
            type: varchar
            length: 20
            desc: Type
            class: string
            component: Colibri.UI.Forms.Text
            default: varchar
            attrs:
              width: 19.5%
          length:
            type: int
            desc: Length
            class: int
            component: Colibri.UI.Forms.Number
            attrs:
              width: 15%
          default:
            type: varchar
            length: 255
            class: string
            component: Colibri.UI.Forms.Text
            desc: Value
            attrs:
              width: 20%
          class:
            type: varchar
            length: 255
            class: string
            component: Colibri.UI.Forms.Text
            desc: Class (PHP)
            attrs:
              width: 20%
          component:
            type: varchar
            length: 255
            class: string
            default: Text
            component: Colibri.UI.Forms.Select
            desc: Component (JS)
            selector:
              value: value
              title: title
            lookup:
              method: ' () => new Promise((resolve, reject) => { let ret = []; Object.forEach(Colibri.UI.Forms.Field.Components,
                (name, value) => { ret.push({value: value.className, title: value.description});
                }); resolve(ret); })'
            attrs:
              width: 22%
  parameters:
    type: json
    component: Colibri.UI.Forms.Object
    desc: Parameters
    class: ParametersField
    default: json_object()
    params:
      hidden: true
      required: false
      readonly: false
  order:
    type: double
    class: float
    default: "0"
    component: Colibri.UI.Forms.Hidden
    desc: Position on parent
indices:
  pages_domain_idx:
    fields:
    - domain
    type: NORMAL
    method: BTREE
  pages_parent_idx:
    fields:
    - parent
    type: NORMAL
    method: BTREE
  pages_name_idx:
    fields:
    - name
    type: NORMAL
    method: BTREE
  pages_order_idx:
    fields:
    - order
    type: NORMAL
    method: BTREE
  pages_published_idx:
    fields:
    - published
    type: NORMAL
    method: BTREE